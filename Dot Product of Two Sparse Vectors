class SparseVector:
    def __init__(self, nums: List[int]):
        self.nums = nums   

    # Return the dotProduct of two sparse vectors
    def dotProduct(self, vec: 'SparseVector') -> int:
        nums1,nums2 = self.nums, vec.nums
        non_zero_idxs = set()
        result, length = 0, len(nums1)
        
        for i in range(length):
            if nums1[i] != 0 and nums2[i] != 0:
                non_zero_idxs.add(i)

        for idx in non_zero_idxs:
            result += (nums1[idx] * nums2[idx])
        return result            
        

# Your SparseVector object will be instantiated and called as such:
# v1 = SparseVector(nums1)
# v2 = SparseVector(nums2)
# ans = v1.dotProduct(v2)
