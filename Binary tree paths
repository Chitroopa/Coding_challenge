# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def binaryTreePaths(self, root: TreeNode) -> List[str]:
        
        def findPath(node, pathSoFar):
            nonlocal treePaths
            if not node: return 
            
            if not node.left and not node.right:
                if pathSoFar:
                    pathSoFar = pathSoFar + "->" +str(node.val)
                else:
                    pathSoFar = str(node.val)
                treePaths.append(pathSoFar)
                return
            
            if pathSoFar:
                pathSoFar = pathSoFar + "->" + str(node.val)
            else:
                pathSoFar = str(node.val)
                
            findPath(node.left, pathSoFar)
            findPath(node.right, pathSoFar)
        
        treePaths = []

        findPath(root, "")        
        return treePaths
            
