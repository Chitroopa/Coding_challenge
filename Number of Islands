class Solution:
    def numIslands(self, grid: List[List[str]]) -> int:
        # initialization
        island = 0
        queue = []
        directions = [(0,1),(0,-1),(1,0),(-1,0)]
        
        # grid traversal
        for i in range(len(grid)):
            for j in range(len(grid[i])):
                if grid[i][j] == "1":
                    queue.append((i,j))
                    island += 1
                    grid[i][j] = "2"
                    # BFS traversal
                while queue:
                    x,y = queue.pop(0)
                    for dx,dy in directions:
                        new_x = dx+x
                        new_y = dy+y
                        if 0 <= new_x < len(grid) and 0 <= new_y < len(grid[0]) and grid[new_x][new_y] == "1":
                            queue.append((new_x,new_y))
                            grid[new_x][new_y] = "2"
                
        return island
