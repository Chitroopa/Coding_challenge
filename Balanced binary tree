# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isBalanced(self, root: TreeNode) -> bool:
        def isValidSubtree(root):
            if not root:
                return 0
            left = isValidSubtree(root.left)
            right = isValidSubtree(root.right)
            if left == -1 or right == -1 or abs(left - right) > 1:
                return -1        
            return 1 + max(left, right)
        
        if not root or (not root.left and not root.right):
            return True
        return isValidSubtree(root) != -1    
     
        
        
    
