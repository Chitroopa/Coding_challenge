# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def minDepth(self, root: TreeNode) -> int:
        #intialization
        level = 0
        queue = []
        
        if not root: return 0
        
        queue.append(root)
        queue.append('()')
        
        #BFS traversal
        while len(queue) > 1:
            curr_root = queue.pop(0)
            if curr_root == "()":
                level += 1
                queue.append('()')
                continue
                
            if not curr_root.left and not curr_root.right: 
                level += 1
                break
                
            if curr_root.left : queue.append(curr_root.left)
            if curr_root.right : queue.append(curr_root.right)
                
        return level
        
