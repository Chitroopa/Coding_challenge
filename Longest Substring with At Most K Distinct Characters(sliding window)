from collections import defaultdict
class Solution:
    def lengthOfLongestSubstringKDistinct(self, s: str, k: int) -> int:
        if k == 0 or not s:
            return 0
        hashmap = defaultdict(int)
        start,end = 0,0
        max_len = 1
        
        while end < len(s):                       
            cur_char = s[end]  
            if (cur_char not in hashmap and len(hashmap) < k) or (cur_char in hashmap and len(hashmap) <= k):
                max_len = max((end-start) +1, max_len)
                hashmap[cur_char] += 1
                end += 1
            else:
                char = s[start] 
                if hashmap[char] == 1:
                    del hashmap[char]
                else:
                    hashmap[char] -=1
                start += 1
        return max_len
            
                
        
