"""
# Definition for a Node.
class Node:
    def __init__(self, x: int, next: 'Node' = None, random: 'Node' = None):
        self.val = int(x)
        self.next = next
        self.random = random
"""

class Solution:
    def copyRandomList(self, head: 'Node') -> 'Node':
        old_new_map = {}
        
        if not head: return head 
        
        new_head = new_node = Node(0)
        old_node = head
        while old_node:
            new_node.next = Node(old_node.val)
            old_new_map[old_node] = new_node.next
            new_node = new_node.next
            old_node = old_node.next
        
        old_node = head
        new_node = new_head.next
        
        while old_node:
            if old_node.random:
                new_node.random = old_new_map[old_node.random]
            new_node = new_node.next
            old_node = old_node.next
        
        return new_head.next
            
