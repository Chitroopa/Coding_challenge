# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def minDepth(self, root: TreeNode) -> int:
        
        if not root:
            return 0
        min_depth = float('infinity')
        def treeDepth(root: TreeNode, depth: int):
            nonlocal min_depth
            if not root.left and not root.right:
                min_depth = min(min_depth, depth)
                return
           
            depth += 1
            if root.left: treeDepth(root.left, depth)
            if root.right: treeDepth(root.right,depth)
        
        treeDepth(root, 1)
        return min_depth
            
                    
                  
