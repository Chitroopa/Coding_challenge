from collections import Counter 
def find_array_quadruplet(arr, s):
  arr.sort()
  arr_map = dict(Counter(arr))  
  def counterReset(key, cmd):
    if cmd == "Remove":
      if arr_map.get(key) and arr_map[key] != 1:
        arr_map[key] = arr_map[key] - 1
      else: del arr_map[key]
    elif cmd == "Add":
      arr_map[key] = arr_map.get(key,0) + 1
    return
  
  for x in range(len(arr)):
    counterReset(arr[x],"Remove")
    for y in range(x+1,len(arr)):
      counterReset(arr[y],"Remove")
      for z in range(y+1, len(arr)):
          counterReset(arr[z],"Remove")
          w = s -(arr[x]+arr[y]+arr[z])
          if arr_map.get(w):
            return sorted([arr[x],arr[y],arr[z], w])
          counterReset(arr[z], "Add")
      counterReset(arr[y], "Add")
    counterReset(arr[x], "Add")
  return []
        

print(find_array_quadruplet([2, 7, 4, 0, 9, 5, 1, 3], 20))
print(find_array_quadruplet([2, 2,1,3,2,0,3,10,4],20))
print(find_array_quadruplet([4,4,4,2],16))
print(find_array_quadruplet([19],2))






            
