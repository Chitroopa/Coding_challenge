class SparseVector:
    def __init__(self, nums: List[int]):
        self.values = {i:n for i,n in enumerate(nums) if n}  

    # Return the dotProduct of two sparse vectors
    def dotProduct(self, vec: 'SparseVector') -> int:
        result = 0
        for idx in self.values:
            if idx in vec.values:
                result += self.values[idx] * vec.values[idx]
        return result
                
# Your SparseVector object will be instantiated and called as such:
# v1 = SparseVector(nums1)
# v2 = SparseVector(nums2)
# ans = v1.dotProduct(v2)
