class Solution:
    def productExceptSelf(self, nums: List[int]) -> List[int]:
        length = len(nums)
        L = [1]*length 
        R = [1]*length
        result = [1]*length
        
        L[0] = nums[0]
        for i in range(1,length):
            L[i] = nums[i] * L[i-1]
            
        R[-1] = nums[-1]
        for i in range(length-2,-1,-1):
            R[i] = nums[i] * R[i+1]
        
        for i in range(length):
            if i-1 >= 0: result[i] *= L[i-1]
            if i+1 <length: result[i] *= R[i+1]
        
        return result
        
        
