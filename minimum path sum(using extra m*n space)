class Solution:
    def minPathSum(self, grid: List[List[int]]) -> int:
        if not grid:
            return 0
        result = 0
        dp = [[0]*len(grid[0]) for _ in range(len(grid))]
        dp[0][0] = grid[0][0]
        row = len(grid)
        col = len(grid[0])            
        for i in range(row):
            for j in range(col):
                if 0<= i-1< row and 0<= j-1 < col:
                    if dp[i-1][j] < dp[i][j-1]:
                        dp[i][j] = dp[i-1][j] + grid[i][j]
                    else: 
                        dp[i][j] = dp[i][j-1] + grid[i][j]
                elif 0<= i-1< row:
                    dp[i][j] = dp[i-1][j] + grid[i][j]
                elif 0<= j-1 < col:
                    dp[i][j] = dp[i][j-1] + grid[i][j]
        return dp[row-1][col-1]
