from collections import defaultdict
class Solution:
    def subarraySum(self, nums: List[int], k: int) -> int:
        result = []     
        lookup = defaultdict(set)
        lookup[0].add(-1)
        sum = 0
        for i in range(len(nums)):
            sum += nums[i]
            if sum-k in lookup:
                for idx in lookup[sum-k]:
                    result.append(nums[idx+1: i+1])
            lookup[sum].add(i)
        return result
"""
Test cases
nums = [1,1,1], k=2
output =[[1, 1], [1, 1]]

nums =[-1,0,1,3,4,-4,-3]
k = 0
output =[[0], [-1, 0, 1], [4, -4], [3, 4, -4, -3], [-1, 0, 1, 3, 4, -4, -3]]

nums =[1]
k=0
output =[]

nums =[-1,2,-3,4,-5]
k=-1
output =[[-1], [2, -3], [4, -5]]


"""
