# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def flatten(self, root: TreeNode) -> None:
        """
        Do not return anything, modify root in-place instead.
        """
        def flattenTree(node):
            if not node or (not node.left and not node.right):
                return
            if node.left:
                flattenTree(node.left)
                tempNode = node.right
                node.right = node.left
                node.left = None
                currNode = node
                while currNode.right:                    
                    currNode = currNode.right
                currNode.right = tempNode
                
            if node.right:
                flattenTree(node.right)
        
        flattenTree(root)
        
                
