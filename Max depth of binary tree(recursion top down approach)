# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def maxDepth(self, root: TreeNode) -> int:
        # input validation
        if not root:
            return 0
        
        # intialization
        max_depth = float('-inf')
        
        # DFS traversal
        def dfs(root: TreeNode, depth):
            nonlocal max_depth
            if not root.left and not root.right:
                max_depth = max(max_depth,depth)
                return
            
            depth += 1
            if root.left: dfs(root.left, depth)
            if root.right: dfs(root.right, depth)
        
        # driver module
        dfs(root,1)
        return max_depth
