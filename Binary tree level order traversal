# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def levelOrder(self, root: TreeNode) -> List[List[int]]:
        #intialization
        tree_level = []
        curr_level = []
        queue = []
        
        
        queue.append(root)
        queue.append('()')
        
        while len(queue) > 1:
            curr_node = queue.pop(0)
            if curr_node == '()':
                tree_level.append(curr_level)
                curr_level = []
                queue.append('()')
                continue
            # print(curr_node.val)

            if curr_node: 
                curr_level.append(curr_node.val)
                if curr_node.left: queue.append(curr_node.left)
                if curr_node.right: queue.append(curr_node.right)
                
        if len(curr_level):
            tree_level.append(curr_level)
        return tree_level
                
        
