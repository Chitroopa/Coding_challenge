# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
from collections import defaultdict
class Solution:
    def verticalOrder(self, root: TreeNode) -> List[List[int]]:
        
        if not root: return []
        queue = [(root,0)]
        col_map = defaultdict(list)
        min_col = float('inf')
        max_col = float('-inf')
        
        while queue:
            cur_node, col = queue.pop(0)
            col_map[col].append(cur_node.val)
            
            min_col = min(min_col, col)
            max_col = max(max_col, col)
            
            if cur_node.left: queue.append((cur_node.left,col-1))
            if cur_node.right: queue.append((cur_node.right, col+1))
        
        result = []
        
        for col in range(min_col, max_col +1):
            result.append(col_map[col])
        
        return result
