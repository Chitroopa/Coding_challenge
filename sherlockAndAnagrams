#!/bin/python3

import math
import os
import random
import re
import sys
from collections import Counter
# Complete the sherlockAndAnagrams function below.
#Anangram checker
def sherlockAndAnagrams(s):
    if not s or len(s) == 1:
        return 0

    # find all sub strings 
    sub_length = 1
    sub_strings_map = {}
    while sub_length < len(s):
        temp = []
        for i in range(len(s)):
            s_slice = s[i:i+sub_length]
            if len(s_slice) == sub_length:                
                temp.append("".join(sorted(s_slice)))
        for t in temp:
            sub_strings_map[t] = sub_strings_map.get(t,0) + 1                
        sub_length += 1
    anagram_counter = 0
    for key in sub_strings_map:
        anagram_counter += (sub_strings_map[key] * (sub_strings_map[key]-1)) //2
    return anagram_counter

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    q = int(input())

    for q_itr in range(q):
        s = input()

        result = sherlockAndAnagrams(s)

        fptr.write(str(result) + '\n')

    fptr.close()
